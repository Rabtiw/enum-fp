"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.normalizeSumType=exports.prop=exports.reduceTypeConstructors=exports.Constructor=void 0;var _createConstructor=_interopRequireDefault(require("./createConstructor"));var _commonUtils=require("./common-utils");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}// TODO: Sanitize name to alphanumeric value
// type Constructor = { name: String, props: [Type|String] };
var Constructor=function Constructor(x){return x};// reduceTypeConstructors :: (Enum, Array Constructor) -> Object EnumAction
exports.Constructor=Constructor;var reduceTypeConstructors=function reduceTypeConstructors(Type,constrDescrs){return(0,_commonUtils.listToObject)(prop(["name"]),function(constr){return(0,_createConstructor.default)(Type,constr)},constrDescrs)};// prop :: Array -> Object
exports.reduceTypeConstructors=reduceTypeConstructors;var prop=function prop(path,defaultVal){return function(obj){return path.reduce(function(newObj,key){return(newObj||{}).hasOwnProperty(key)?newObj[key]:defaultVal},obj)}};// normalizeSumType :: Array String | Object [a] -> Constructor
exports.prop=prop;var normalizeSumType=function normalizeSumType(sumType){return(0,_commonUtils.isArray)(sumType)?sumType.map(function(name){return Constructor({name:name})}):Object.keys(sumType).map(function(name){return Constructor({name:name,props:sumType[name]})})};exports.normalizeSumType=normalizeSumType;