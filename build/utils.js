"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.normalizeSumType=exports.match=exports.isArray=exports.prop=exports.reduceTypeConstructors=exports.Constructor=void 0;var _createConstructor=_interopRequireDefault(require("./createConstructor"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)==="[object Arguments]")return Array.from(iter)}function _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++){arr2[i]=arr[i]}return arr2}}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==="function"){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))}ownKeys.forEach(function(key){_defineProperty(target,key,source[key])})}return target}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}// TODO: Sanitize name to alphanumeric value
// type Constructor = { name :: String, props :: [String] };
var Constructor=function Constructor(x){return x};// reduceTypeConstructors :: (Enum, Array Constructor) -> Object EnumAction
exports.Constructor=Constructor;var reduceTypeConstructors=function reduceTypeConstructors(Type,constrDescrs){return constrDescrs.reduce(function(obj,constr){return _objectSpread({},obj,_defineProperty({},constr.name,(0,_createConstructor.default)(Type,constr)))},{})};// prop :: Array -> Object
exports.reduceTypeConstructors=reduceTypeConstructors;var prop=function prop(path,defaultVal){return function(obj){return path.reduce(function(newObj,key){return(newObj||{}).hasOwnProperty(key)?newObj[key]:defaultVal},obj)}};// isArray :: * -> Boolean
exports.prop=prop;var isArray=function isArray(arr){return{}.toString.call(arr)==="[object Array]"};// match :: EnumTagType -> Pattern -> b
exports.isArray=isArray;var match=function match(instance,pattern){if(!instance||!instance.name)throw new Error("Invalid instance passed");var action=pattern[instance.name]||pattern._;if(!action)throw new Error("Non-Exhaustive pattern. You must pass fallback case `_` in the pattern");return action.apply(void 0,_toConsumableArray(instance.args))};// normalizeSumType :: Array String | Object [a] -> Constructor
exports.match=match;var normalizeSumType=function normalizeSumType(sumType){return isArray(sumType)?sumType.map(function(name){return Constructor({name:name})}):Object.keys(sumType).map(function(name){return Constructor({name:name,props:sumType[name]})})};exports.normalizeSumType=normalizeSumType;